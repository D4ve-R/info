(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[463],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return h},kt:function(){return m}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),c=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},h=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,h=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,p=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?i.createElement(p,o(o({ref:t},h),{},{components:n})):i.createElement(p,o({ref:t},h))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<a;c++)o[c]=n[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3878:function(e,t,n){"use strict";n.d(t,{r:function(){return o}});var i=n(7294),r="icon_1PGw",a=n(9205),o=function(e){return i.createElement("div",{className:"alert alert--primary",role:"alert",style:{margin:"2rem"}},i.createElement("div",{className:r},i.createElement(a.A,{icon:"\ud83d\udca1",active:"true"})),e.children)}},983:function(e,t,n){"use strict";n.d(t,{M:function(){return l}});var i=n(7294),r=n(9205),a="titleOffset_2I3u",o="iconContainer_1xRA",l=function(e){var t=e.title?i.createElement("div",{className:"card__header"},i.createElement("span",{className:o},e.icon&&i.createElement(r.A,{icon:e.icon,link:e.link,active:"true"})),i.createElement("h3",{className:e.icon&&a},e.title)):"";return i.createElement("div",{className:"card-demo",style:{margin:"2rem"}},i.createElement("div",{className:"card"},t,i.createElement("div",{className:"card__body"},i.createElement("p",null," ",e.children," "))))}},9205:function(e,t,n){"use strict";n.d(t,{A:function(){return c}});var i=n(7294),r="hidden_2JtY",a="iconContainer_2Rnc",o="visible_2147",l="link_Lh4h",s="clickable_3vcc",c=function(e){var t=" "+(e.active?o:r),n=l+" "+(e.link&&s);return i.createElement("div",{className:a+t},i.createElement("a",{href:e.link,className:n},e.icon||"\ud83d\ude80"))}},6649:function(e,t,n){"use strict";n.d(t,{x:function(){return a}});var i=n(7294),r="threeScene_3QXR",a=function(e){return i.createElement("iframe",{className:r,width:"100%",height:"600px",key:Math.random(),src:e.link,frameBorder:"0"})}},8830:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return h},metadata:function(){return u},toc:function(){return d},default:function(){return p}});var i=n(2122),r=n(9756),a=(n(7294),n(3905)),o=n(983),l=n(3878),s=n(6649),c=["components"],h={title:"\u2728 Subsets",sidebar_position:2},u={unversionedId:"Guide/web-ifc-three/Tutorials/Highlighting",id:"Guide/web-ifc-three/Tutorials/Highlighting",isDocsHomePage:!1,title:"\u2728 Subsets",description:"Introduction",source:"@site/docs/Guide/web-ifc-three/Tutorials/Highlighting.mdx",sourceDirName:"Guide/web-ifc-three/Tutorials",slug:"/Guide/web-ifc-three/Tutorials/Highlighting",permalink:"/info/docs/Guide/web-ifc-three/Tutorials/Highlighting",version:"current",sidebarPosition:2,frontMatter:{title:"\u2728 Subsets",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"\ud83e\udd0f Picking",permalink:"/info/docs/Guide/web-ifc-three/Tutorials/Picking"},next:{title:"\ud83d\udcc3 Properties",permalink:"/info/docs/Guide/web-ifc-three/Tutorials/Properties"}},d=[{value:"Introduction",id:"introduction",children:[{value:"Import dependencies",id:"import-dependencies",children:[]}]},{value:"How to do it",id:"how-to-do-it",children:[{value:"Highlight material",id:"highlight-material",children:[]},{value:"Single subset",id:"single-subset",children:[]},{value:"Multiple subsets",id:"multiple-subsets",children:[]},{value:"Extracting geometry",id:"extracting-geometry",children:[]}]},{value:"Next steps",id:"next-steps",children:[]}],m={toc:d};function p(e){var t=e.components,n=(0,r.Z)(e,c);return(0,a.kt)("wrapper",(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"\ud83c\udfa9\nIn almost all BIM applications, elements are highlighted when the user moves the mouse over them or selects them. IFC.js is no exception, and in this tutorial we will see how to achieve this."),(0,a.kt)("a",{href:"https://ifcjs.github.io/info/docs/Guide/web-ifc-three/Tutorials/Picking/",target:"_self"},"\ud83d\udc69\u200d\ud83c\udfeb Previously"," "),"we have seen how to obtain the ID of an object on which we cast a ray with the",(0,a.kt)("a",{href:"https://threejs.org/docs/#api/en/core/Raycaster"},"Raycaster"),". Now that we have those IDs, it's possible to highlight those elements using ",(0,a.kt)("b",null,"geometric subsets"),".",(0,a.kt)(o.M,{icon:"\ud83e\uddf1",title:"Geometric subsets?",mdxType:"IfcCard"},(0,a.kt)("b",null,"Geometric subsets")," are any group of items in the model. For example: all doors, all ground floor elements or all elements fulfilling a given condition."),(0,a.kt)("h3",{id:"import-dependencies"},"Import dependencies"),(0,a.kt)("p",null,"\u26bd\nWe'll need a ",(0,a.kt)("a",{parentName:"p",href:"https://threejs.org/docs/#api/en/materials/Material"},"material")," to highlight the items. You can choose any material you like; in this example we'll use a ",(0,a.kt)("a",{parentName:"p",href:"https://threejs.org/docs/#api/en/materials/MeshLambertMaterial"},"MeshLambertmaterial"),", which we'll import from Three's core library."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'import { MeshLambertMaterial } from "three";\n')),(0,a.kt)("p",null,"We'll use the Raycaster, so you'll also need ",(0,a.kt)("a",{href:"https://ifcjs.github.io/info/docs/Guide/web-ifc-three/Tutorials/Picking/#import-threejs-dependencies",target:"_self"},"those dependencies"),", as well as ",(0,a.kt)("a",{href:"https://ifcjs.github.io/info/docs/Guide/web-ifc-three/Tutorials/Picking/#import-three-mesh-bvh-optional",target:"_self"},"three-mesh-bvh")," if we want optimal performance."),(0,a.kt)("h2",{id:"how-to-do-it"},"How to do it"),(0,a.kt)("h3",{id:"highlight-material"},"Highlight material"),(0,a.kt)("p",null,"\ud83c\udf00\nThe first thing is to create the ",(0,a.kt)("strong",{parentName:"p"},"highlight material"),".Play with the configuration and make the material look nice! Pro tip: you can use ",(0,a.kt)("inlineCode",{parentName:"p"},"depthTest=false")," so that the object is visible from any viewpoint."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"// Creates subset material\nconst preselectMat = new MeshLambertMaterial({\n  transparent: true,\n  opacity: 0.6,\n  color: 0xff88ff,\n  depthTest: false,\n});\n")),(0,a.kt)("p",null,"\u261d\nNote that geometric subsets are ",(0,a.kt)("strong",{parentName:"p"},"uniquely identified")," by their material."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"If you create a subset with a wall using a material A, and then try to create a subset of another wall with the same material A, the second wall will be added to the subset of the first one.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"If you create a subset with a wall using material A, and then try to create another subset of the same wall using material B, you will have created two independent subsets."))),(0,a.kt)(l.r,{mdxType:"IfcAlert"},"You can have two separate subsets with the same appearance using two instances of the same material."),(0,a.kt)("h3",{id:"single-subset"},"Single subset"),(0,a.kt)("p",null,"\ud83d\udc2d\nWe can create a highlight effect when the user hovers with ",(0,a.kt)("a",{href:"https://ifcjs.github.io/info/docs/Guide/web-ifc-three/api#createsubset",target:"_self"},"createSubset"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const ifc = ifcLoader.ifcManager;\n\n// Reference to the previous selection\nlet preselectModel = { id: -1 };\n\nfunction highlight(event, material, model) {\n  const found = cast(event)[0];\n  if (found) {\n    // Gets model ID\n    model.id = found.object.modelID;\n\n    // Gets Express ID\n    const index = found.faceIndex;\n    const geometry = found.object.geometry;\n    const id = ifc.getExpressId(geometry, index);\n\n    // Creates subset\n    ifcLoader.ifcManager.createSubset({\n      modelID: model.id,\n      ids: [id],\n      material: material,\n      scene: scene,\n      removePrevious: true,\n    });\n  } else {\n    // Removes previous highlight\n    ifc.removeSubset(model.id, material);\n  }\n}\n\nwindow.onmousemove = (event) => highlight(event, preselectMat, preselectModel);\n")),(0,a.kt)(s.x,{link:"https://ifcjs.github.io/hello-world/examples/web-ifc-three/highlighting-single/",mdxType:"Scene"}),(0,a.kt)("p",null,"\ud83d\udc40\nThere are several interesting things to look out for:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"The implementation of ",(0,a.kt)("inlineCode",{parentName:"p"},"cast()")," was shown ",(0,a.kt)("a",{href:"https://ifcjs.github.io/info/docs/Guide/web-ifc-three/Tutorials/Picking/#how-to-do-it",target:"_self"},"previously"),".")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"The variable ",(0,a.kt)("inlineCode",{parentName:"p"},"currentModel")," is used to store a reference of the selected model; this way, when the user is not hovering an object, we are able to remove the previous subset with ",(0,a.kt)("a",{href:"https://ifcjs.github.io/info/docs/Guide/web-ifc-three/api#removesubset",target:"_self"},"removeSubset"),".")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"The IDs of the items whose subset to create have to be given as an ",(0,a.kt)("strong",{parentName:"p"},"array")," (even if it's a single ID)."))),(0,a.kt)("h3",{id:"multiple-subsets"},"Multiple subsets"),(0,a.kt)("p",null,"\ud83d\udc85\ud83d\udc85\ud83d\udc85\nWorking with ",(0,a.kt)("strong",{parentName:"p"},"multiple subsets")," is as easy as working with a single subset. We just need to create a new material, create a new subset with the same function and associate the creation of that subset to an event."),(0,a.kt)("p",null,"In this example we are going to bind it to ",(0,a.kt)("strong",{parentName:"p"},"double click")," to simulate the effect of highlighting objects when they are selected."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const selectMat = new MeshLambertMaterial({\n  transparent: true,\n  opacity: 0.6,\n  color: 0xff00ff,\n  depthTest: false,\n});\n\nconst selectModel = { id: -1 };\nwindow.ondblclick = (event) => highlight(event, selectMat, selectModel);\n")),(0,a.kt)(s.x,{link:"https://ifcjs.github.io/hello-world/examples/web-ifc-three/highlighting-multiple/",mdxType:"Scene"}),(0,a.kt)("h3",{id:"extracting-geometry"},"Extracting geometry"),(0,a.kt)("p",null,"\ud83d\udc69\u200d\ud83c\udfeb\nIf you create a geometry subset and do not specify a highlight material, the subset will have the ",(0,a.kt)("strong",{parentName:"p"},"original materials"),"."),(0,a.kt)(l.r,{mdxType:"IfcAlert"},"This would allow, for example, to create a geometric subset with all the ground floor elements of the BIM model and hide the rest."),(0,a.kt)("p",null,"\ud83c\udf1a\nIn the next example we will apply a transparent material to a copy of loaded IFC model and create a subset with the original materials when the mouse hovers over an item. For this we will use almost the same code as before."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js",metastring:"{3,4,5,6,7,13,14,15,16}","{3,4,5,6,7,13,14,15,16}":!0},'ifcLoader.load("../../IFC/01.ifc", (ifcModel) => {\n  ifcModel.visible = false;\n\n  const modelCopy = new Mesh(\n    ifcModel.geometry,\n    new MeshLambertMaterial({\n      transparent: true,\n      opacity: 0.1,\n      color: 0x77aaff,\n    })\n  );\n\n  scene.add(ifcModel);\n  scene.add(modelCopy);\n});\n\n// ...\n\nwindow.onmousemove = (event) => highlight(event, undefined, highlightModel);\n')),(0,a.kt)(s.x,{link:"https://ifcjs.github.io/hello-world/examples/web-ifc-three/highlighting-single-original-material/",mdxType:"Scene"}),(0,a.kt)("h2",{id:"next-steps"},"Next steps"),(0,a.kt)("p",null,"\ud83c\udf89\ud83c\udf89\ud83c\udf89\nCongratulations! You should now be able to highlight elements and extract geometry from the BIM model. Good job!"),(0,a.kt)("p",null,"\ud83d\udcc3 However, don't be so quick to claim victory. We haven't talked about the \"I\" in BIM yet, and that's even more important than the geometry. That's what the next lesson is for."))}p.isMDXComponent=!0}}]);